---
- name: create the reproducer network
  os_network:
    cloud: "{{ cloud_name }}"
    name: "{{ env_name }}-net"
    state: present
    external: false
    shared: no
    wait: yes

- name: create the reproducer subnet
  os_subnet:
    cloud: "{{ cloud_name }}"
    name: "{{ env_name }}-subnet"
    network_name: "{{ env_name }}-net"
    enable_dhcp: yes
    cidr: 192.168.0.0/24
    dns_nameservers:
       - 10.11.5.19
       - 10.10.160.2
       - 10.5.30.160
       - 8.8.8.7
       - 8.8.8.8
    wait: yes

- name: create a router
  os_router:
    cloud: "{{ cloud_name }}"
    state: present
    name: "{{ env_name }}-router"
    network: "{{ public_network_name }}"
    interfaces:
      - "{{ env_name }}-subnet"

- name: create security group
  os_security_group:
    cloud: "{{ cloud_name }}"
    name: "{{ env_name }}-security-group"
    state: present
    description: Security group for our test instances

- name: create security group rule for ping
  os_security_group_rule:
    cloud: "{{ cloud_name }}"
    security_group: "{{ env_name }}-security-group"
    protocol: icmp
    remote_ip_prefix: 0.0.0.0/0

- name: create security group rule for SSH
  os_security_group_rule:
    cloud: "{{ cloud_name }}"
    security_group: "{{ env_name }}-security-group"
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0

- name: create security group rule for Gerrit
  os_security_group_rule:
    cloud: "{{ cloud_name }}"
    security_group: "{{ env_name }}-security-group"
    protocol: tcp
    port_range_min: 8080
    port_range_max: 8080
    remote_ip_prefix: 0.0.0.0/0

- name: create security group rule for Zuul
  os_security_group_rule:
    cloud: "{{ cloud_name }}"
    security_group: "{{ env_name }}-security-group"
    protocol: tcp
    port_range_min: 9000
    port_range_max: 9000
    remote_ip_prefix: 0.0.0.0/0

- name: create security group rule for Logs
  os_security_group_rule:
    cloud: "{{ cloud_name }}"
    security_group: "{{ env_name }}-security-group"
    protocol: tcp
    port_range_min: 8000
    port_range_max: 8000
    remote_ip_prefix: 0.0.0.0/0

- name: create security group rule for git/review access.
  os_security_group_rule:
    cloud: "{{ cloud_name }}"
    security_group: "{{ env_name }}-security-group"
    protocol: tcp
    port_range_min: 29418
    port_range_max: 29418
    remote_ip_prefix: 0.0.0.0/0
